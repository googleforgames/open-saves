// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package triton;

import "google/api/annotations.proto";

message KeyValue {
  string key = 1;
  bytes value = 2;
  int32 size = 3;
}

message StorageOptions {}

message Storage {
  // ID of this storage, assigned by the server when the storage is created.
  int64 id = 1;
  string name = 2;
  StorageOptions options = 3;
}

message CreateStorageRequest { StorageOptions options = 1; }

message GetStorageRequest { int64 id = 1; }

message ListStorageRequest {}

message DeleteStorageRequest { int64 id = 1; }

message GetValueRequest {
  int64 storage_id = 1;
  repeated string key = 2;
}

message GetValueResponse { repeated KeyValue key_value = 1; }

message SetValueRequest {
  int64 storage_id = 1;
  repeated KeyValue key_value = 2;
}

message SetValueResponse {}

message DeleteValueRequest {
  int64 storage_id = 1;
  // TODO: should or should not allow batch delete?
  repeated string key = 2;
}

message DeleteValueResponse {}

service StorageService {
  rpc CreateStorage(CreateStorageRequest) returns (Storage) {
    option (google.api.http) = {
      post : "/v1/triton/storage:create"
      body : "*"
    };
  }
  rpc GetValue(GetValueRequest) returns (GetValueResponse) {}
  rpc SetValue(SetValueRequest) returns (SetValueResponse) {}
  rpc DeleteValue(DeleteValueRequest) returns (DeleteValueResponse) {}
}